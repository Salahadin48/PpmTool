{"version":3,"sources":["components/project/ProjectItem.js","components/project/AddProject.js","actions/ProjectActions.js","actions/types.js","components/project/CreateProjectButton.js","components/resources/Dashboard.js","components/resources/Header.js","reducers/errorReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["ProjectItem","className","href","Component","AddProject","state","onChange","bind","onSubmit","event","this","setState","target","name","value","preventDefault","newProject","projectName","projectIdentifier","projectDescription","projectStartDate","projectEndDate","console","log","props","createProject","history","type","placeholder","protoTypes","PropTypes","func","isRequired","connect","project","dispatch","a","axios","post","push","payload","response","data","CreateProjectButton","Fragment","to","Dashboard","Header","data-toggle","data-target","id","initialState","combineReducers","errors","action","middleware","thunk","store","window","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1dc542bc.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass ProjectItem extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">REACT</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>Spring / React Project</h3>\n                            <p>Project to create a Kanban Board with Spring Boot and React</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <a href=\"#\">\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\">  Project Board </i>\n                                    </li>\n                                </a>\n                                <a href=\"#\">\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\">  Update Project Info</i>\n                                    </li>\n                                </a>\n                                <a href=\"\">\n                                    <li className=\"list-group-item delete\">\n                                        <i className=\"fa fa-minus-circle pr-1\">  Delete Project</i>\n                                    </li>\n                                </a>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProjectItem;\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {createProject} from \"../../actions/ProjectActions\"\n\nclass AddProject extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            \"projectName\": \"\",\n            \"projectIdentifier\": \"\",\n            \"projectDescription\": \"\",\n            \"projectStartDate\": \"\",\n            \"projectEndDate\": \"\",\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(event){\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onSubmit(event){\n        event.preventDefault();\n        const newProject = {\n            \"projectName\": this.state.projectName,\n            \"projectIdentifier\": this.state.projectIdentifier,\n            \"projectDescription\": this.state.projectDescription,\n            \"projectStartDate\": this.state.projectStartDate,\n            \"projectEndDate\": this.state.projectEndDate,\n        }\n        console.log(newProject);\n        this.props.createProject(newProject, this.props.history)\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    // check name attribute input fields\n\n                    // create\n                }\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr/>\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control form-control-lg \"\n                                               placeholder=\"Project Name\"\n                                               name=\"projectName\"\n                                               value={this.state.projectName}\n                                               onChange={this.onChange}/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control form-control-lg\"\n                                               placeholder=\"Unique Project ID\"\n                                               name=\"projectIdentifier\"\n                                               value={this.state.projectIdentifier}\n                                               onChange={this.onChange}/>\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <textarea className=\"form-control form-control-lg\"\n                                                  placeholder=\"Project Description\"\n                                                  name=\"projectDescription\"\n                                                  value={this.state.projectDescription}\n                                                  onChange={this.onChange}></textarea>\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className=\"form-control form-control-lg\"\n                                               name=\"projectStartDate\"\n                                               value={this.state.projectStartDate}\n                                               onChange={this.onChange}/>\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className=\"form-control form-control-lg\"\n                                               name=\"projectEndDate\"\n                                               value={this.state.projectEndDate}\n                                               onChange={this.onChange}/>\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProject.protoTypes = {\n    createProject: PropTypes.func.isRequired\n}\n\nexport default connect(\n    null,\n    {createProject})(AddProject);\n","import axios from \"axios\";\nimport {GET_ERRORS} from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        const result = await axios.post(\"http://localhost:8080/api/project\", project);\n        history.push(\"/dashboard\")\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n}\n","export const GET_ERRORS = \"GET_ERRORS\";\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport AddProject from \"./AddProject\";\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    );\n}\n\nexport default CreateProjectButton;\n","import React, {Component} from 'react';\nimport ProjectItem from \"../project/ProjectItem\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport CreateProjectButton from \"../project/CreateProjectButton\";\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br/>\n                            <CreateProjectButton/>\n                            <br/>\n                            <hr/>\n                            <ProjectItem/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React, {Component} from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <a className=\"navbar-brand\" href=\"Dashboard.html\">\n                        Personal Project Management Tool\n                    </a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/dashboard\">\n                                    Dashboard\n                                </a>\n                            </li>\n                        </ul>\n\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link \" href=\"register.html\">\n                                    Sign Up\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"login.html\">\n                                    Login\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Header;\n","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n    errors: errorReducer\n});\n","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\"\n\nconst initialState = {}\nconst middleware = [thunk]\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n                    window.__REDUX_DEVTOOLS_EXTENSION__()));\n} else {\n    store = createStore(rootReducer, initialState,\n        compose(\n            applyMiddleware(...middleware)));\n}\n\nexport default store;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Dashboard from \"./components/resources/Dashboard\";\nimport Header from \"./components/resources/Header\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\nimport {Provider} from \"react-redux\"\nimport store from \"./store\";\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Header/>\n                        <Route exact path=\"/dashboard\" component={Dashboard}/>\n                        <Route exact path=\"/addProject\" component={AddProject}/>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}